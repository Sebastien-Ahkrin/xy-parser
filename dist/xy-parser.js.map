{"version":3,"file":"xy-parser.js","sources":["../lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nfunction uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nfunction parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX: uniqueX$1 = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let maxY = Number.MIN_VALUE;\n  let result = { x: [], y: [] };\n  let info = [];\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns &&\n        fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result.x.push(x);\n        result.y.push(y);\n      }\n    } else if (line) {\n      info.push({ position: result.x.length, value: line });\n    }\n  }\n\n  if (uniqueX$1) {\n    uniqueX(result);\n  }\n\n  if (rescale) {\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n\nexports.parseXY = parseXY;\n"],"names":["Object","defineProperty","exports","value","uniqueX","points","x","y","length","Error","current","counter","i","parseXY","text","options","rescale","uniqueX$1","xColumn","yColumn","keepInfo","maxNumberColumns","Number","MAX_SAFE_INTEGER","minNumberColumns","Math","max","lines","split","maxY","MIN_VALUE","result","info","l","line","trim","match","fields","parseFloat","replace","push","position","data"],"mappings":"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"}